using HotFix.GamePlay.BattleModule.DamageModule.Interface;

namespace HotFix.GamePlay.BattleModule.DamageModule.Module
{
    /// <summary>
    /// 易伤/增伤模块
    /// </summary>
    public class VulnerabilityModule : IDamageModule
    {
        public string ModuleName => "Vulnerability";
        public int ExecutionOrder => 400;
    
        public void Process(DamageContext context)
        {
            if (context.Defender.GetModule(EEntityModule.Status, out StatusModule defenderStatus))
            {
                float vulnerability = defenderStatus?.GetVulnerability() ?? 0;
                float damageIncrease = defenderStatus?.GetDamageIncrease() ?? 0;
                
                float multiplier = 1 + vulnerability + damageIncrease;
                context.FinalDamage *= multiplier;
                context.IntermediateValues["AfterVulnerability"] = context.FinalDamage;
            }
       
        }
    }
}